#pragma checksum "D:\github\weixinsample\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\Home\QrCode.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "efac2d66488a20c792cccee0b64c6c751d3abe2a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_QrCode), @"mvc.1.0.view", @"/Views/Home/QrCode.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\github\weixinsample\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\_ViewImports.cshtml"
using Senparc.Weixin.Sample.NetCore3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\github\weixinsample\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\_ViewImports.cshtml"
using Senparc.Weixin.Sample.NetCore3.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"efac2d66488a20c792cccee0b64c6c751d3abe2a", @"/Views/Home/QrCode.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"931ae162f46de7fc281b09500bbe6dbc3f933a4d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_QrCode : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Senparc.Weixin.Sample.NetCore3.Models.VD.Home_IndexVD>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/notifications/toastr/toastr.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery-qrcode.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/qrcode.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/notifications/toastr/toastr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\github\weixinsample\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\Home\QrCode.cshtml"
  
    ViewBag.Title = "";


#line default
#line hidden
#nullable disable
            DefineSection("styles", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "efac2d66488a20c792cccee0b64c6c751d3abe2a5314", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <style>\r\n        #qrcode img {\r\n            width: auto;\r\n            height: auto;\r\n            max-width: 100%;\r\n            max-height: 100%;\r\n        }\r\n    </style>\r\n");
            }
            );
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "efac2d66488a20c792cccee0b64c6c751d3abe2a6804", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "efac2d66488a20c792cccee0b64c6c751d3abe2a7903", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "efac2d66488a20c792cccee0b64c6c751d3abe2a9002", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        //var qrcode = new QRCode(""qrcode"", {
        
        //});
        $(() => {
            
            var vehicle_no = localStorage.getItem(""vehicle_no"");
            var vehicle_color = localStorage.getItem(""vehicle_color"");
            //console.log(vehicle_no, vehicle_no)
            $('#carno').val(vehicle_no);
            $('#carcolor').val(vehicle_color);
            //var ic = localStorage.getItem(""ic"");
            //var openid = localStorage.getItem(""openid"");
            //var token = localStorage.getItem(""token"");
            var openid = 'openid';
            var token='token'
            if (token && openid) {
                if (vehicle_no == null) {
                    vehicle_color = ""2"";
                    vehicle_no = '';
                    bootbox.dialog(
                        {
                            title: ""绑定车牌号"",
                            message: `<div id=""inputform"" class=""form-content"" >
    <form class=""form"" role=""form"" id");
                WriteLiteral(@"=""popform"">
        <div class=""form-group"">
            <div class=""input-group"">
                <input type=""text"" class=""form-control  rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent""
                       placeholder=""有效的车牌号"" required=""required""
                       value=""${vehicle_no || ''}""
                       name=""carno""
                       id=""carno"">
                <div class=""input-group-append"">
                    <select class=""form-control rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent"" name=""carcolor"" id=""carcolor"">
                       <option value=""1"" ${vehicle_color == '1' ? 'selected' : ''}>黄牌</option>
                        <option value=""2""  ${vehicle_color == '2' ? 'selected' : ''}>蓝牌</option>
                        <option value=""3"" ${vehicle_color == '3' ? 'selected' : ''}>绿牌</option>
                        <option value=""4"" ${vehicle_color == '4' ? 'selected' : ''}>白牌</option>
                    </selec");
                WriteLiteral(@"t>
                </div>
            </div>
        </div>
         
    </form>
</div>`,
                            buttons: {
                                confirm: {
                                    label: '绑定',
                                    className: 'btn-info',
                                    callback: function () {
                                        var veh = $('#carno').val();
                                        var color = $('#carcolor').val();
                                        console.log(veh, color);
                                        if (veh && color) {
                                            getvehicel(token, openid, veh, color);
                                        } else {
                                            alert('请输入车牌')
                                            return false;
                                        }


                                    }

                                },
                      ");
                WriteLiteral(@"          cancel: {
                                    label: '取消',
                                    className: 'btn-default'
                                }
                            },

                        });
                } else {
                    getvehicel(token, openid, vehicle_no);
                }

            } else {
                showinfo('用户没有绑定,清先绑定账号')
                window.location.href = '/Home/BindUser';
            }


            $(""#bindingcarbtn"").on(""click"", function () {
                 vehicle_no = localStorage.getItem(""vehicle_no"");
                 vehicle_color = localStorage.getItem(""vehicle_color"");
                bootbox.dialog(
                    {
                        title: ""重新绑定车牌号"",
                        message: `<div id=""inputform"" class=""form-content"" >
    <form class=""form"" role=""form"" id=""popform"">
        <div class=""form-group"">
            <div class=""input-group"">
                <input type=""text"" class=""for");
                WriteLiteral(@"m-control  rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent""
                       placeholder=""有效的车牌号"" required=""required""
                       value=""${vehicle_no||''}""
                       name=""carno""
                       id=""carno"">
                <div class=""input-group-append"">
                    <select class=""form-control rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent"" name=""carcolor"" id=""carcolor"">
                        <option value=""1"" ${vehicle_color=='1'?'selected':''}>黄牌</option>
                        <option value=""2""  ${vehicle_color == '2' ? 'selected' : ''}>蓝牌</option>
                        <option value=""3"" ${vehicle_color == '3' ? 'selected' : ''}>绿牌</option>
                        <option value=""4"" ${vehicle_color == '4' ? 'selected' : ''}>白牌</option>
                    </select>
                </div>
            </div>
        </div>
         
    </form>
</div>`,
                        buttons: {
    ");
                WriteLiteral(@"                        confirm: {
                                label: '绑定',
                                className: 'btn-info',
                                callback: function () {
                                    var veh = $('#carno').val();
                                    var color = $('#carcolor').val();
                                    console.log(veh, color);
                                    if (veh && color) {
                                        getvehicel(token, openid, veh,color);
                                    } else {
                                        alert('请输入车牌')
                                        return false;
                                    }


                                }
                            },
                            cancel: {
                                label: '取消',
                                className: 'btn-default'
                            }
                        },
                        ");
                WriteLiteral(@"
                    });
            });



        })
        function getvehicel(token, openid, vehicle_no,color) {
            var dialog = bootbox.dialog({
                message: '<p class=""text-center mb-0""><i class=""fal fa-spin fa-spinner""></i> 请等待...</p>',
                closeButton: false
            });
    
            var input = JSON.stringify({ VEHICLE_NO: vehicle_no, VEHICLE_COLOR: color });
            var url = `");
#nullable restore
#line 168 "D:\github\weixinsample\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\Home\QrCode.cshtml"
                  Write(ViewBag.apihost);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"/api/passport/getinfoToQrCode?token=${token}&loginMark=${openid}&data=${input}`;
            $.post(url).done(res => {
                setTimeout(() => {
                    dialog.modal('hide');
                }, 500)
                if (res.code == 410) {
                    showinfo('登录过期')
                    localStorage.setItem(""token"", '');
                    window.location.href = '/Home/BindUser';
                } else if (res.code == 200) {
                    var ic = res.data.passport.head[0].VEHICLE_IC_NO;
                    var veh = res.data.passport.head[0].VEHICLE_NO;
                    var vehcolor = res.data.passport.head[0].VEHICLE_COLOR;
                    $('#title').text(`卡号:${ic}`);
                    $('#title1').text(`车牌号:${veh}`);
                    showqrcode(ic);
                    localStorage.setItem(""vehicle_no"", veh);
                    localStorage.setItem(""vehicle_color"", vehcolor);
                    localStorage.setItem(""ic"", ic);
            ");
                WriteLiteral(@"        showinfo('车牌绑定成功')
                } else {
                    bootbox.alert(res.info);
                    localStorage.setItem(""vehicle_no"", vehicle_no);
                    localStorage.setItem(""vehicle_color"", color);
                    localStorage.setItem(""ic"", '');
                    $('#title').text(`卡号:空`);
                    $('#title1').text(`车牌号:空`);
                    showqrcode('');
                }
            });
            
        } 

        function refreshPage() {
            var vehicle_no = localStorage.getItem(""vehicle_no"");
            var vehicle_color = localStorage.getItem(""vehicle_color"");
            var openid = 'openid';// localStorage.getItem(""openid"");
            var token = 'token';// localStorage.getItem(""token"");
            getvehicel(token, openid, vehicle_no, vehicle_color)
        }
        function showqrcode(str) {
            //qrcode.makeCode(str);
            if (str) {
                $('#qrcode').empty().qrcode({
        ");
                WriteLiteral(@"            // render method: 'canvas', 'image' or 'div'
                    render: 'image',

                    // version range somewhere in 1 .. 40
                    minVersion: 1,
                    maxVersion: 40,

                    // error correction level: 'L', 'M', 'Q' or 'H'
                    ecLevel: 'L',

                    // offset in pixel if drawn onto existing canvas
                    left: 0,
                    top: 0,

                    // size in pixel
                    size: 400,

                    // code color or image element
                    fill: '#000',

                    // background color or image element, null for transparent background
                    background: null,

                    // content
                    text: str,

                    // corner radius relative to module width: 0.0 .. 0.5
                    radius: 0,

                    // quiet zone in modules
                    quiet: 1,

        ");
                WriteLiteral(@"            // modes
                    // 0: normal
                    // 1: label strip
                    // 2: label box
                    // 3: image strip
                    // 4: image box
                    mode: 0,

                    mSize: 0.1,
                    mPosX: 0.5,
                    mPosY: 0.5,

                    label: 'no label',
                    fontname: 'sans',
                    fontcolor: '#000',

                    image: null
                });
            } else {
                $('#qrcode').empty().width(309).height(309)
            }
        }
        function showinfo(msg) {
            toastr.options = {
                ""closeButton"": false,
                ""debug"": false,
                ""newestOnTop"": true,
                ""progressBar"": false,
                ""positionClass"": ""toast-top-center"",
                ""preventDuplicates"": false,
                ""onclick"": null,
                ""showDuration"": 300,
             ");
                WriteLiteral(@"   ""hideDuration"": 100,
                ""timeOut"": 2000,
                ""extendedTimeOut"": 1000,
                ""showEasing"": ""swing"",
                ""hideEasing"": ""linear"",
                ""showMethod"": ""fadeIn"",
                ""hideMethod"": ""fadeOut""
            }
            toastr[""info""](msg)

          
        }
    </script>
");
            }
            );
            WriteLiteral(@"



<div class=""row"">
    <div class=""col-xl-12"">
        <div id=""c_1"" class=""card border shadow-0 mb-g shadow-sm-hover"" data-filter-tags=""oliver kopyov"">
            <div class=""card-header pr-3 d-flex align-items-center flex-wrap"">
                <!-- we wrap header title inside a div tag with utility padding -->
                <div class=""card-title"">二维码查询</div>
                <button id=""bindingcarbtn"" class=""btn   btn-primary ml-auto mr-1 waves-effect waves-themed"">
                    重新绑定车号
                </button>

                <button onclick=""refreshPage()"" class=""btn   btn-light   waves-effect waves-themed"">
                    <i class=""fal fa-redo-alt""></i>
                </button>

            </div>
            <div class=""card-body   m-auto mb-0 pb-0"">
                <h4 id=""title"" class=""mb-0 pb-0"">卡号:</h4>
                </div>
                <div class=""card-body m-auto"">

                    <div id=""qrcode""></div>
                </div>
              ");
            WriteLiteral("  <div class=\"card-body   m-auto mt-0 pt-0\">\r\n\r\n                    <h4 id=\"title1\">车牌号:</h4>\r\n                    <h4 id=\"title2\">监管区域:");
#nullable restore
#line 319 "D:\github\weixinsample\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\Home\QrCode.cshtml"
                                    Write(ViewBag.zone);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h4>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Senparc.Weixin.Sample.NetCore3.Models.VD.Home_IndexVD> Html { get; private set; }
    }
}
#pragma warning restore 1591
