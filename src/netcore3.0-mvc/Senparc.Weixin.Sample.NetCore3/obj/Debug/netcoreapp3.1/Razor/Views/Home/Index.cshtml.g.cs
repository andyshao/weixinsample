#pragma checksum "D:\projects\ATB\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "83425f2aed695289071aec6ef937d71c3cf759e8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\projects\ATB\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\_ViewImports.cshtml"
using Senparc.Weixin.Sample.NetCore3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\projects\ATB\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\_ViewImports.cshtml"
using Senparc.Weixin.Sample.NetCore3.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"83425f2aed695289071aec6ef937d71c3cf759e8", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"931ae162f46de7fc281b09500bbe6dbc3f933a4d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Senparc.Weixin.Sample.NetCore3.Models.VD.Home_IndexVD>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/plupload-3.1.2/js/plupload.full.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/plupload-3.1.2/js/jquery.plupload.queue/jquery.plupload.queue.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/plupload-3.1.2/js/langs/zh_CN.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\projects\ATB\src\netcore3.0-mvc\Senparc.Weixin.Sample.NetCore3\Views\Home\Index.cshtml"
  
    ViewBag.Title = "";


#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    .plfile_empty_div {
        position: absolute;
        left: 27%;
        top: 43%;
        z-index: 1;
    }

    ul#filelist {
        width: 450px;
        min-height: 100px;
        background: #fff;
        border-left: 0;
        border-right: 0;
        line-height: 24px;
        overflow: hidden;
        margin: 0 15px;
        padding: 5px 0;
        font-size:12px;
    }

        ul#filelist li {
            list-style-type: none;
            margin: 4px 0;
            padding: 0px 17px 0px 0px;
        }
            ul#filelist li:hover {
                background: #d6e7f9;
            }
    #filelist li {
        clear: both;
        line-height: 22px;
        height: 22px;
    }

    .plupload_filename {
        width: 190px;
        display: block;
        float: left;
        word-wrap: break-word;
        margin-right: 10px;
        line-height: 22px;
        margin-left: 10px;
        white-space: nowrap;
        overflow: hidden;
   ");
            WriteLiteral(@"     text-overflow: ellipsis;
    }

    .plupload_filesize {
        width: 100px;
        line-height: 22px;
        display: block;
        float: left;
    }

    .plupload_d-none {
        display: none;
    }

    .plupload_fileremove {
        float: right;
        line-height: 22px;
        display: block;
        cursor: pointer;
    }

    .plupload_fileprogress {
        display: block;
        width: 83px;
        line-height: 22px;
        float: left;
        text-align: right;
    }
</style>
");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n\r\n\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "83425f2aed695289071aec6ef937d71c3cf759e86277", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "83425f2aed695289071aec6ef937d71c3cf759e87376", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "83425f2aed695289071aec6ef937d71c3cf759e88475", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        $('#uploadbtn').click(function () {
            $('#uploadfilesmodal').modal('toggle')
        })

        $(() => {
            $('#slimscroll').slimScroll({
                height: '100px',
                railVisible: true,
                alwaysVisible: false,
            });
            var uploader = new plupload.Uploader({
                runtimes: 'html5,flash,silverlight,html4',
                filters: {
                    max_file_size: ""20mb""
                },
                browse_button: 'selectuploadfilesbtn', // this can be an id of a DOM element or the DOM element itself
                url: '/Home/upload',
                flash_swf_url: '/scripts/plugin/plupload/js/Moxie.swf',
                silverlight_xap_url: '/scripts/plugin/plupload/js/Moxie.xap'
            });
            uploader.init();
            //验证文件大小
            plupload.addFileFilter('max_file_size', function (maxSize, file, cb) {
                var undef;
                ");
                WriteLiteral(@"if (file.size !== undef && maxSize && file.size > plupload.parseSize(maxSize)) {
                    this.trigger('Error', {
                        code: plupload.FILE_SIZE_ERROR,
                        message: plupload.translate('File size error.'),
                        file: file
                    });
                    cb(false);
                } else {
                    cb(true);
                }
            });
            //初始化
            uploader.bind('Init', function (up) {
                $('#plupload_max_size_alert').addClass('d-none');
            });
            //设置post参数
            uploader.bind('BeforeUpload', function (up) {
                up.settings.multipart_params.tags = 'test';
            });
            //单击选择文件
            uploader.bind('Browse', function ( ) {
                $('#plupload_max_size_alert').addClass('d-none');
            });
            //分段上传
            uploader.bind('ChunkUploaded', function (up, file, info) {
               ");
                WriteLiteral(@" console.log(up, file, info)
            });
            //捕获异常
            uploader.bind('Error', function (up, error) {
                console.log(up, error)
                if (error.code == -600) {
                    $('#plupload_max_size_alert').removeClass('d-none')
                } else {
                    bootbox.alert(`异常:${error.message}`);
                }
            });
           //添加文件
            uploader.bind('FilesAdded', function (up, files) {
                $('#file_empty_div').hide()
                var html = '';
                plupload.each(files, function (file) {
                    html += `<li id=""${file.id}""  >
                        <span class=""plupload_filename"">${file.name}</span>
                        <span id=""filesize"" class=""plupload_filesize"">(大小:${plupload.formatSize(file.size)})</span>
                        <span id=""plfilesize"" class=""plupload_d-none"">${plupload.formatSize(file.size)}</span>
                        <span id=""remove"" clas");
                WriteLiteral(@"s=""plupload_fileremove"">
                                    <a href=""javascript:void(0);"" class=""btn btn-outline-info btn-xs btn-icon waves-effect waves-themed"">
                                        <i class=""fal fa-times""></i>
                                    </a>
                        </span>
                        <span id=""progress"" class=""plupload_fileprogress""></span>
                        </li>`
                    //html += '<li id=""' + file.id + '"">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b></li>';
                });
                document.getElementById('filelist').innerHTML += html;
            });
            //删除队列中的文件
            $(document).on('click', '#remove', function (e) {
                var li = $(this).closest('li');
                var fileid = li.attr('id');
                uploader.removeFile(fileid);
                li.remove()
                if ($('ul#filelist li').length == 0) {
                    $('#file_empty_div').show(");
                WriteLiteral(@");
                }
            });
            //显示进度
            uploader.bind('UploadProgress', function (up, file) {
                 $(`li#${file.id} > .plupload_fileprogress`).text(file.percent + "" %"")
               
            });
            uploader.bind('BeforeChunkUpload', function (up, file) {
                console.log('BeforeChunkUpload',up, file)
                
            });
            
            //完成上传 
            uploader.bind('UploadComplete', function (up, files) {
                console.log('UploadComplete', up.files)
                $('#plupload_max_size_alert').addClass('d-none');
                $('#uploadfilesmodal').modal('toggle')
                uploader.files.forEach(function (item) {
                    uploader.removeFile(item);
                    $('ul#filelist #' + item.id).remove();
                });
                $('#file_empty_div').show();
            });
            //开始上传
            $('#postuploadfilesbtn').click( function () {");
                WriteLiteral("\n                uploader.start();\r\n            });\r\n        })\r\n\r\n    </script>\r\n");
            }
            );
            WriteLiteral(@"
<div class=""modal fade"" id=""uploadfilesmodal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">
                    文件上传

                </h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true""><i class=""fal fa-times""></i></span>
                </button>
            </div>
            <div class=""modal-body pb-0 pt-0"">
                <div id=""slimscroll"" >
                    <div id=""file_empty_div"" class=""plfile_empty_div"">
                        <i class=""fal fa-exclamation-circle color-info""></i> 请使用[选择文件]按钮，选择文件。
                    </div>
                    <ul id=""filelist""></ul>
                </div>
                <div id=""plupload_max_size_alert"" class=""alert alert-primary mb-0  fw-300 fs-sm p-2  d-none"" ro");
            WriteLiteral(@"le=""alert"">
                    <strong>提示</strong> 上传文件大小请控制在20MB以内。
                </div>
                <input id=""fileupload"" type=""file"" name=""fileupload"" multiple style=""display: none"" />

            </div>
            <div class=""modal-footer"">
                <button id=""selectuploadfilesbtn"" type=""button"" class=""btn btn-info"">选择文件</button>
                <button id=""postuploadfilesbtn"" type=""button"" class=""btn btn-primary"">上传</button>
            </div>
        </div>
    </div>
</div>
<button id=""uploadbtn"" class=""btn btn-primary ml-auto waves-effect waves-themed"" type=""button"">上传文件</button>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Senparc.Weixin.Sample.NetCore3.Models.VD.Home_IndexVD> Html { get; private set; }
    }
}
#pragma warning restore 1591
