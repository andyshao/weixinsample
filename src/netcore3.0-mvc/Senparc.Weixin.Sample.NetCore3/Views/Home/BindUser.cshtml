@model Senparc.Weixin.Sample.NetCore3.Models.VD.Home_IndexVD
@{
    ViewBag.Title = "";

}
@section styles{ 
    <link href="~/css/notifications/toastr/toastr.css" rel="stylesheet" />

}
@section scripts
 {

    <script src="~/lib/jquery.serializeJSON/jquery.serializejson.min.js"></script>
    <script src="~/js/notifications/toastr/toastr.js"></script>
    <script type="text/javascript">
        $(() => {
            
            var token =  localStorage.getItem("token");
            var openid = localStorage.getItem("openid");
            console.log(openid, token);
            if (token) {
                console.log(token);
                window.location.href = '/Home/QrCode';
            } else {
                console.log('no token');
            }

            function uuidv4() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
            $('#bindingbtn').on('click', function () {
                var form = document.getElementById("bindform");
                if (form.reportValidity()) {
                    var user = $('#bindform').serializeJSON();
                    if (openid != null) {
                        user.openid = openid;
                    }
                    else {
                        user.openid = uuidv4();;
                    }
                    console.log(user);
                    var dialog = bootbox.dialog({
                        message: '<p class="text-center mb-0"><i class="fal fa-spin fa-spinner"></i> 请等待...</p>',
                        closeButton: false
                    });
                    var data = JSON.stringify({ username: user.username, openid: user.openid });
                    var url = `@ViewBag.apihost/api/user/login?token=&loginMark=${user.openid}&data=${data}`;
                    console.log(url);
                    $.post(url).done(res => {
                        setTimeout(() => {
                            dialog.modal('hide');
                        }, 500)
                        console.log(res);
                        //debugger;
                        if (res.code == 200) {
                            showinfo('绑定成功')
                            localStorage.setItem("token", res.data.baseinfo.token);
                            localStorage.setItem("username", user.username);
                            localStorage.setItem("openid", user.openid);
                            window.location.href = '/Home/QrCode';
                        } else {
                            console.log(res.info)
                            if (res.info.includes('此账户已经绑定')) {
                                bootbox.confirm({
                                    message: "此账户已经绑定,你可以解绑后重新绑定吗?",
                                    buttons: {
                                        confirm: {
                                            label: '解绑',
                                            className: 'btn-danger'
                                        },
                                        cancel: {
                                            label: '取消',
                                            className: 'btn-success'
                                        }
                                    },
                                    callback:function(result) {
                                        /* your callback code */
                                        console.log(result)

                                        var url = `@ViewBag.apihost/api/user/cancel?token=&loginMark=${user.openid}&data=${data}`;
                                        $.post(url).done(res => {
                                            console.log(res)
                                            if (res.code == 200) {
                                                showinfo('解绑成功')
                                            } else {

                                            }
                                        })


                                    }
                                })
                            } else {
                                bootbox.alert(res.info);
                            }
                        }



                       // window.location.href = '/Home/QrCode';
                    })

                }
                else {
                    form.classList.add('was-validated');
                }
            });
            $('#restbtn').on('click', function () {
                var form = document.getElementById("bindform");
                form.reset();
                form.classList.remove('was-validated');
            });
        })

        function showinfo(msg) {
            toastr["info"](msg)

            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": true,
                "progressBar": false,
                "positionClass": "toast-top-center",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": 300,
                "hideDuration": 100,
                "timeOut": 5000,
                "extendedTimeOut": 1000,
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
        }
    </script>
}

<div class="row">
    <div class="col-xl-12">
        <div id="c_1" class="card border shadow-0 mb-g shadow-sm-hover" data-filter-tags="oliver kopyov">
            <div class="card-header pr-3 d-flex align-items-center flex-wrap">
                <!-- we wrap header title inside a div tag with utility padding -->
                <div class="card-title">绑定用户</div>
                <button onclick="window.history.back()" class="btn   btn-light ml-auto waves-effect waves-themed">
                    返回
                </button>

            </div>
            <div class="card-body">
                <form id="bindform" class="needs-validation" novalidate>
                    <div class="form-group">
                        <div class="input-group">
                            <input type="text" class=" form-control  rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="用户名" required name="username" id="username">
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <input type="text" class=" form-control  rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="手机号" pattern="[1](([3][0-9])|([4][5-9])|([5][0-3,5-9])|([6][5,6])|([7][0-8])|([8][0-9])|([9][1,8,9]))[0-9]{8}$" name="phonenumber" id="phonenumber">
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <input type="text" class=" form-control  rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="企业十位编码" required pattern="[0-9]{10}" name="tradeno" id="tradeno">
                        </div>
                    </div>
                </form>
            </div>
            <div class="card-body border-faded border-left-0 border-right-0 border-bottom-0 d-flex flex-row align-items-center">
                <button id="bindingbtn" class="btn btn-primary ml-auto waves-effect waves-themed" type="button">绑定</button>
                <button id="restbtn" class="btn btn-light  ml-1 waves-effect waves-themed" type="reset">重置</button>
            </div>


        </div>
    </div>
</div>

